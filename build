#!/usr/bin/env ruby
require 'terrun'

class Build < TerminalRunner
  name "Build"

  option "--help", 0, "", "Show this help document."

  option "fix", 0, "", "Runs wstrip on the lib directory before building."
  option "test", 0, "", "Run the tests after building."
  option "run", 0, "", "Run the application after building (and testing if applicable)."
  help <<EOS
    Note that this build script does not currently support generating the Lexer. This must be done manually using ruby 1.8.7 as follows:
    $ /bin/bash --login
    $ rvm use 1.8.7
    $ gem install rex  # (may not be needed if already installed)
    $ rex lib/mpp_lexer.rex -o lib/mpp_lexer.rb
EOS

  def self.run
    if @@options.include? "--help"
      show_usage
      exit
    end

    if @@options.include? "fix"
      `wstrip lib -r -e "rb|y|rex"`
      puts "[DONE] Fixing."
    end

    puts "Building Parser..."
    `racc lib/mpp_parser.y -o lib/mpp_parser.rb`

    puts "Creating Executable..."
    `rm lib/mppc`
    `cp lib/mppc.rb lib/mppc`
    `chmod +x lib/mppc.rb`

    puts "[DONE] Building."

    if @@options.include? "test"
      Dir.entries("lib/test").select do |test|
        next if test[0] == "."
        puts "==========Starting Test Suite: #{test}=========="
        system("ruby", "lib/test/#{test}")
      end
      puts "[DONE] Testing."
    end

    if @@options.include? "run"
      `rm mpp_example.asm`
      system("ruby", "lib/mppc", "mpp_example.mpp", "-o", "mpp_example.asm", "-v")
      puts "[DONE] Running."
      File.readlines("mpp_example.asm").each { |line| puts line }
    end
  end
end

if __FILE__ == $0
  x = Build.start(ARGV)
end
